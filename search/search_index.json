{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#azure-mail","title":"Azure Mail","text":"<p>A Python package for sending emails in Office 365 via an Azure app</p> <p>This project is developed in collaboration with the Centre for Advanced Research Computing, University College London.</p>"},{"location":"#about","title":"About","text":""},{"location":"#project-team","title":"Project Team","text":"<p>MIRSG</p>"},{"location":"#research-software-engineering-contact","title":"Research Software Engineering Contact","text":"<p>Centre for Advanced Research Computing, University College London (arc.collaborations@ucl.ac.uk)</p>"},{"location":"#built-with","title":"Built With","text":"<ul> <li>Framework 1</li> <li>Framework 2</li> <li>Framework 3</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p><code>azure-mail</code> requires Python 3.11\u20133.12.</p>"},{"location":"#installation","title":"Installation","text":"<p>We recommend installing in a project specific virtual environment created using a environment management tool such as Conda. To install the latest development version of <code>azure-mail</code> using <code>pip</code> in the currently active environment run</p> <pre><code>pip install git+https://github.com/UCL-MIRSG/azure-mail.git\n</code></pre> <p>Alternatively create a local clone of the repository with</p> <pre><code>git clone https://github.com/UCL-MIRSG/azure-mail.git\n</code></pre> <p>and then install in editable mode by running</p> <pre><code>pip install -e .\n</code></pre>"},{"location":"#running-locally","title":"Running Locally","text":"<p>How to run the application on your local system.</p>"},{"location":"#running-tests","title":"Running Tests","text":"<p>Tests can be run across all compatible Python versions in isolated environments using <code>tox</code> by running</p> <pre><code>tox\n</code></pre> <p>To run tests manually in a Python environment with <code>pytest</code> installed run</p> <pre><code>pytest tests\n</code></pre> <p>again from the root of the repository.</p>"},{"location":"#building-documentation","title":"Building Documentation","text":"<p>The MkDocs HTML documentation can be built locally by running</p> <pre><code>tox -e docs\n</code></pre> <p>from the root of the repository. The built documentation will be written to <code>site</code>.</p> <p>Alternatively to build and preview the documentation locally, in a Python environment with the optional <code>docs</code> dependencies installed, run</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> Initial Research</li> <li> Minimum viable product &lt;-- You are Here</li> <li> Alpha Release</li> <li> Feature-Complete Release</li> </ul>"},{"location":"#azure-app-set-up","title":"Azure App Set-up","text":"<p>Before being able to send emails, you need to create an app in Azure with the necessary permissions to send emails on behalf of a user.</p> <p>The credentials for the app should be stored in a <code>.env</code> or <code>.envrc</code> file in the root directory of the project:</p> <ul> <li>CLIENT_ID: ID of the app created in Azure</li> <li>TENANT_ID:   ID of the organisation   in Azure</li> <li>USERNAME: username@ucl.ac.uk </li> <li>ACCOUNT: username@ucl.ac.uk </li> <li>SCOPE: https://outlook.office365.com/.default</li> <li>AUTHOR: For shared mailboxes</li> <li>SERVER: outlook.office365.com</li> </ul> <p>The <code>ClientApplication</code> from python <code>msal</code> library is used to connect to an app installed in Microsoft Azure with the relevant permissions. An access token is acquired through <code>acquire_token_by_username_password</code> firstly and then the access token is cached so <code>acquire_token_silent</code> to be used in future uses of this package. This provides the necessary credentials and configuration to access the UCL account from which the emails are sent.</p>"},{"location":"LICENSE/","title":"License","text":""},{"location":"LICENSE/#mit-license","title":"MIT License","text":"<p>Copyright (c) 2024 MIRSG Ator</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/","title":"API reference","text":"<p>azure_mail package.</p>"},{"location":"api/#azure_mail.main","title":"<code>main</code>","text":"<p>Create an email to send with an Azure app.</p>"},{"location":"api/#azure_mail.main.create_calendar_ics","title":"<code>create_calendar_ics(subject, description, date, start_hour, start_minute=0, duration_hours=1, duration_minutes=0, timezone='Europe/London')</code>","text":"<p>Create an ICS calendar file for attaching in an email.</p> Source code in <code>src/azure_mail/main.py</code> <pre><code>def create_calendar_ics(  # noqa: PLR0913\n    subject: str,\n    description: str,\n    date: str,\n    start_hour: int,\n    start_minute: int = 0,\n    duration_hours: int = 1,\n    duration_minutes: int = 0,\n    timezone: str = \"Europe/London\",\n) -&gt; exchangelib.FileAttachment:\n    \"\"\"Create an ICS calendar file for attaching in an email.\"\"\"\n    date_time = dateutil.parser.parse(date)\n    time_start = date_time + datetime.timedelta(\n        hours=start_hour,\n        minutes=start_hour,\n    )\n    time_end = date_time + datetime.timedelta(\n        hours=start_hour + duration_hours,\n        minutes=start_minute + duration_minutes,\n    )\n\n    tz = pytz.timezone(timezone)\n    time_start = tz.localize(time_start)\n    time_end = tz.localize(time_end)\n\n    event = ics.Event()\n    event.name = subject\n    event.description = description\n    event.begin = time_start\n    event.end = time_end\n\n    calendar = ics.Calendar()\n    calendar.events.add(event)\n\n    return exchangelib.FileAttachment(\n        name=f\"{subject}.ics\",\n        content=bytes(calendar.serialize(), \"UTF-8\"),\n    )\n</code></pre>"},{"location":"api/#azure_mail.main.create_email","title":"<code>create_email(recipients, body, subject, attachments)</code>","text":"<p>Create an email to send to a list of users as bcc.</p> Source code in <code>src/azure_mail/main.py</code> <pre><code>def create_email(\n    recipients: list[str],\n    body: exchangelib.HTMLBody,\n    subject: str,\n    attachments: list[exchangelib.FileAttachment],\n) -&gt; exchangelib.Message:\n    \"\"\"Create an email to send to a list of users as bcc.\"\"\"\n    access_token = _get_app_access_token()\n    account = _setup_email_account(\n        access_token=access_token,\n    )\n\n    message = exchangelib.Message(\n        account=account,\n        folder=account.drafts,\n        author=os.environ[\"AUTHOR\"],\n        subject=subject,\n        body=body,\n        to_recipients=[exchangelib.Mailbox(email_address=os.environ[\"AUTHOR\"])],\n        bcc_recipients=recipients,\n    )\n\n    message.attach(\n        attachments=attachments,\n    )\n\n    return message\n</code></pre>"}]}